---
const { backendId, backend } = Astro.props;

// Check if backend has external services
const hasExternalServices = backend.externalServices && backend.externalServices.length > 0;

// Get styling based on backend type
const isImplemented = backend.type === 'implemented';
const isExternal = backend.type === 'external';
---

<div 
  class={`backend-card rounded-lg p-4 shadow-md hover:shadow-lg transition-all duration-300 cursor-pointer mx-auto ${
    isImplemented 
      ? 'bg-gradient-to-br from-green-50 to-emerald-100 border-2 border-green-300' 
      : 'bg-gradient-to-br from-blue-50 to-sky-100 border-2 border-blue-300'
  }`}
  data-backend={backendId}
  style="max-width: 250px;"
>
  <div class="flex items-center justify-between mb-3">
    <div class="flex items-center space-x-2">
      <div class={`w-3 h-3 rounded-full animate-pulse ${
        isImplemented ? 'bg-green-600' : 'bg-blue-600'
      }`}></div>
      <span class="text-xs font-medium text-gray-700 uppercase tracking-wide">Backend</span>
      <span class={`px-2 py-1 text-xs font-bold rounded-full uppercase tracking-wide ${
        isImplemented 
          ? 'bg-green-100 text-green-800 border border-green-300' 
          : 'bg-blue-100 text-blue-800 border border-blue-300'
      }`}>
        {isImplemented ? 'Internal' : 'External'}
      </span>
    </div>
    <div class="flex items-center gap-2">
      {hasExternalServices && (
        <div class="bg-orange-100 rounded-full p-1" title="Has external services">
          <svg class="w-3 h-3 text-orange-600" fill="currentColor" viewBox="0 0 20 20">
            <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"/>
            <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"/>
          </svg>
        </div>
      )}
      <div class={`${isImplemented ? 'text-green-600' : 'text-blue-600'}`}>
        {isImplemented ? (
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        ) : (
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
          </svg>
        )}
      </div>
    </div>
  </div>
  
  <h4 class="text-lg font-bold text-gray-800 mb-2">{backend.name}</h4>
  <p class="text-sm text-gray-600 mb-3">{backend.description}</p>
  
  {hasExternalServices && (
    <div class="mt-3 pt-3 border-t-2 border-orange-200">
      <div class="flex items-center gap-2 mb-2">
        <div class="flex items-center justify-center w-6 h-6 bg-orange-500 rounded-full">
          <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
          </svg>
        </div>
        <span class="text-sm font-bold text-orange-600 uppercase tracking-wide">External Services</span>
      </div>
      <div class="bg-orange-50 rounded-lg p-2 space-y-1.5">
        {backend.externalServices.map(service => (
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-orange-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
            <span class="text-sm font-semibold text-gray-800">{service}</span>
          </div>
        ))}
      </div>
    </div>
  )}
</div>