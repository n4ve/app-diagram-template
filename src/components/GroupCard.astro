---
import type { GroupData } from '../types/index.ts';
import PageCard from './PageCard.astro';

const { groupId, group } = Astro.props as {
  groupId: string;
  group: GroupData;
};

// Get all pages that belong to this group (now nested under group.pages)
const groupPages = Object.entries(group.pages);
---

<div 
  class="group-card bg-white rounded-xl p-4 shadow-lg border-l-4 cursor-pointer transition-all duration-300 hover:shadow-xl hover:-translate-y-2"
  style={`border-left-color: ${group.color}`}
  data-group={groupId}
  data-pages={JSON.stringify(groupPages.map(([pageId]) => pageId))}
>
  <!-- Group Header -->
  <div class="flex items-center gap-3 mb-4 p-3 rounded-lg" style={`background: linear-gradient(135deg, ${group.color}20, ${group.color}10)`}>
    <div class="w-12 h-12 rounded-lg flex items-center justify-center" style={`background-color: ${group.color}`}>
      <span class="text-white text-xl">ðŸ“¦</span>
    </div>
    <div class="flex-1">
      <h3 class="text-lg font-bold text-gray-800">{group.name}</h3>
      <p class="text-gray-600 text-sm">{group.description}</p>
    </div>
    <div class="text-right">
      <div class="text-lg font-bold" style={`color: ${group.color}`}>
        {groupPages.length}
      </div>
      <div class="text-xs text-gray-500">pages</div>
    </div>
  </div>
  
  <!-- Pages Grid -->
  <div class="space-y-3">
    <div class="text-sm font-medium text-gray-700 mb-2">Pages in this group:</div>
    <div class="grid gap-3">
      {groupPages.map(([pageId, pageData]) => {
        // Add groupId to pageData for compatibility with PageCard
        const pageWithGroupId = { ...pageData, groupId };
        return (
          <div class="transform scale-95 hover:scale-100 transition-transform duration-200">
            <PageCard pageId={pageId} page={pageWithGroupId} />
          </div>
        );
      })}
    </div>
  </div>
</div>